---
import MyLayout from "@layouts/MyLayout.astro";
import { Image } from "@astrojs/image/components";
import CTA from "@components/CTA.astro";
import BlogPost from "@components/BlogPost.astro";

import { sortPostsByDate } from "@/scripts/utils.js";

const title = "Efraim Munthe | Home";

const skillset = [
  {
    iconClass: "fa-brands fa-html5",
    skillname: "HTML",
  },
  {
    iconClass: "fa-brands fa-css3",
    skillname: "CSS",
  },
  {
    iconClass: "fa-brands fa-sass",
    skillname: "Sass",
  },
  {
    iconClass: "fa-brands fa-js",
    skillname: "JavaScript",
  },
  {
    iconClass: "fa-brands fa-vuejs",
    skillname: "Vue",
  },
  {
    iconClass: "fa-brands fa-git",
    skillname: "Git",
  },
  {
    iconClass: "fa-brands fa-github",
    skillname: "Github",
  },
  {
    iconClass: "fa-brands fa-python",
    skillname: "Python",
  },
];

const projects = [
  {
    link: "https://github.com/Klrfl/Sebastian",
    image: "/assets/Sebastian.png",
    heading: "Sebastian",
    text: "This is my first ever static site, made when I barely knew anything about CSS.",
    alt: "Screenshot of Sebastian's landing page",
  },
  {
    link: "https://github.com/Klrfl/Sebastian-Sidebar",
    image: "/assets/Sebastian Sidebar.png",
    heading: "Sebastian Sidebar",
    text: "This is an improved version of my first static site. Looks quite similar.",
    alt: "Screenshot of Sebastian Sidebar's landing page",
  },
  {
    link: "https://github.com/Klrfl/suwit-jawa",
    image: "/assets/Suwit Jawa by Klrfl.png",
    heading: "Suwit Jawa in JS",
    text: "Suwit Jawa game I made in JS.",
    alt: "Screenshot of my Suwit Jawa game",
  },
  {
    link: "https://porto.lupy.my.id",
    image: "/assets/X PPLG Portofolio Landing Page.png",
    heading: "PPLG Portfolio landing page.",
    text: "I designed the grid layout of this landing page",
    alt: "PPLG Portfolio collection landing page",
  },
  {
    link: "https://klrfl-moviesearch.netlify.app",
    image: "/assets/react-movie-search.png",
    heading: "React Movie Search",
    text: "I was bored and decided to learn React. This is just some simple API fetching stuff.",
    alt: "Screenshot of my first React app, React Movie Search",
  },
  {
    link: "https://klrfl-url-shortener.netlify.app",
    image: "/assets/url-shortener.png",
    heading: "Vue URL Shortener",
    text: "My first Vue project I used to get to know the Vue router and state management (spoiler alert: there was no state management).",
    alt: "Screenshot of my URL Shortener app.",
  },
  {
    link: "https://pinia-tasks-2b2da.web.app/",
    image: "/assets/pinia-tasks.png",
    heading: "Pinia Tasks",
    text: "A classic todo app made with Vue and Pinia for state management, powered by Firebase for authentication and hosting.",
    alt: "Home page of Pinia Tasks",
  },
];

const allPosts = await Astro.glob("./posts/*.md");
const sortedPosts = sortPostsByDate(allPosts, 3);
---

<MyLayout title={title}>
  <main>
    <section class="hero">
      <div class="hero__text">
        <h1>Hello! I'm Efraim.</h1>
        <p>I'm a student who is learning to be a frontend web developer.</p>
      </div>
      <div class="hero__image"></div>
    </section>

    <section class="main-section" id="skills">
      <div class="main-section__text">
        <h2>Skills</h2>
        <p>
          Here are some technologies/skills I have learned over the last 2 years
          as a student.
        </p>
      </div>
      <div class="skills__cards-container">
        {
          skillset.map((skill) => (
            <div class="skill-card">
              <span class="skill-text">
                <i class:list={skill.iconClass} />
                {skill.skillname}
              </span>
            </div>
          ))
        }
      </div>
    </section>

    <section class="main-section" id="projects">
      <div class="main-section__text">
        <h2>Projects</h2>
        <p>
          I strongly believe in learning by doing. So, when I learn a new
          technology, I always do projects, be it large or small. Here are some
          of them.
        </p>
      </div>

      <div class="projects-container">
        {
          projects.map((project) => (
            <div class="project-card">
              <a href={project.link} target="_blank">
                <div class="project-card__image-container">
                  <Image
                    src={project.image}
                    alt={`Screenshot of my project, ${project.heading}.`}
                    width="700"
                    aspectRatio="16:9"
                    format="webp"
                  />
                </div>
                <div class="project-text">
                  <h3>{project.heading}</h3>
                  <p>{project.text}</p>
                </div>
              </a>
            </div>
          ))
        }
      </div>
    </section>

    <section class="main-section" id="blog">
      <div class="main-section__text">
        <h2>Blog Posts</h2>
        <p>The newest posts from my personal blog.</p>
      </div>

      <div class="blog-posts-container">
        <ul class="blog-list">
          {sortedPosts.map((post: object) => <BlogPost post={post} />)}
        </ul>
        <CTA href="/blog">See more blog posts</CTA>
      </div>
    </section>

    <section class="main-section" id="about">
      <div class="main-section__text">
        <h2>About me</h2>
        <p>
          My name is Efraim Munthe, I am a student currently learning about
          front-end web development and the JAMStack. I also recently got into
          backend web development, dabbling in NodeJS, PostgreSQL and Express. I
          haven't learned much about them, so I haven't put them into my skills
          yet.
        </p>
        <CTA href="/about">See more</CTA>
      </div>
    </section>

    <section class="main-section" id="contact">
      <div class="main-section__text">
        <h2>Contact</h2>
        <p>Not functional at the moment. I am working on it please wait!!!</p>
      </div>

      <div class="form-container">
        <form action="/form-success" method="POST" data-netlify="true">
          <label for="name">Name</label>
          <input type="text" name="name" placeholder="John Doe" required />

          <label for="email">Email</label>
          <input
            type="email"
            name="email"
            placeholder="johndoe420@mail.com"
            required
          />

          <label for="message">Your message</label>
          <textarea id="message" name="message" placeholder="Hi!!!"></textarea>

          <button type="submit"><CTA>Send a message</CTA></button>
        </form>
      </div>
    </section>
  </main>
</MyLayout>

<style>
  /* main section, hero */
  .main-section {
    padding: 4rem 2rem;
    background: var(--background);
    overflow-x: hidden;

    position: relative;
  }

  .main-section.hidden > * {
    transform: translateX(50%);
    opacity: 0;
  }

  .main-section > * {
    max-width: 100ch;
    margin: auto;
    transition: opacity var(--transition-slow), transform var(--transition-slow);
  }

  .hero {
    min-height: 100vh;
    color: var(--text);
    position: sticky;
    top: 0;
    z-index: -2;
    display: flex;
    flex-direction: column;
  }

  .hero__text {
    background: var(--secondary);
    color: var(--text);
    text-align: center;
    padding-inline: 1em;
    z-index: 1;
    flex: 1 1 0;

    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .hero__text h1 {
    font-size: min(2.5rem, 8vmin);
    width: max-content;
    line-height: 0.9;
    margin-inline: auto;
    margin-block: 0;
    position: relative;
  }

  .hero__text h1::before,
  .hero__text h1::after {
    content: "";
    position: absolute;
    inset: 0;
  }

  .hero__text h1::before {
    background: var(--secondary);
    animation: typing 3s steps(18) 1000ms forwards;
  }

  .hero__text h1::after {
    width: 0.2rem;
    top: -5px;
    animation: typing 3s steps(18) 1000ms forwards,
      blink 500ms infinite alternate;
  }

  @keyframes typing {
    to {
      left: 100%;
    }
  }

  @keyframes blink {
    from {
      background: transparent;
    }
    to {
      background: var(--text);
    }
  }

  .hero__image {
    order: -1;
    flex: 2 1 0;
    background-image: url(../assets/f1-75.webp);
    background-size: cover;
    background-position: center;
    overflow: hidden;
  }

  .hero__image > img {
    max-height: 100%;
    position: relative;
  }

  /* skills */
  .skills-section {
    clip-path: polygon(100% 0, 100% 100%, 0 100%, 0 10%);
  }

  .skills__cards-container {
    text-align: center;
    align-self: stretch;

    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1em;
  }

  .skill-card {
    outline: 2px solid var(--outline-color-secondary);
    background: var(--secondary);
    font-size: 1.2em;
    border-radius: 0.5em;
    padding-block: 2rem;
    padding-inline: 4rem;
    max-width: 20ch;
    overflow: hidden;
    user-select: none;

    transition: outline var(--transition), box-shadow var(--transition);

    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1 1 0;
    position: relative;
  }

  .skill-text > i {
    display: block;
    margin-bottom: 0.5em;
  }

  .skill-card:hover {
    outline-color: var(--outline-color);
    box-shadow: 0 5px 20px -2px var(--outline-color-mute);
  }

  #about {
    background: var(--secondary);
  }

  /* projects */
  .projects-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30ch, 1fr));
    gap: 1rem;
  }

  .project-card {
    outline: 2px solid var(--outline-color-secondary);
    background: var(--secondary);
    border-radius: 0.5em;
    user-select: none;
    cursor: pointer;
    overflow: hidden;
    transition: outline var(--transition), box-shadow var(--transition);

    display: flex;
    flex-direction: column;
  }

  .project-card:hover {
    outline-color: var(--outline-color);
    box-shadow: 0 5px 20px -2px var(--outline-color-mute);
  }

  .project-card a {
    color: inherit;
  }

  .project-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .project-text {
    padding: 1rem;
    flex-grow: 1;
  }

  /* contact */

  .form-container {
    background: var(--secondary);
    padding: 1em;
    align-self: stretch;
  }

  .form-container :is(label, input, textarea) {
    padding: 1em;
  }
  .form-container label {
    display: block;
    padding-inline: 0;
  }

  .form-container input {
    width: 100%;
  }

  .form-container textarea {
    display: block;
    width: 100%;
    resize: vertical;
  }

  @media screen and (min-width: 50em) {
    .hero__text {
      padding-inline: 4em 10em;
      text-align: left;
      position: absolute;
      top: 0;
      bottom: 0;
      clip-path: polygon(100% 0, 70% 100%, 0% 100%, 0 0%);

      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .hero__text h1 {
      margin-inline: 0;
    }

    .hero__text p {
      max-width: 40ch;
    }

    .main-section {
      padding-inline: 4em;
    }
  }
</style>

<script>
  import "../scripts/hero.js";
</script>
