---
import MainLayout from "@/layouts/MainLayout.astro";
import CTA from "@components/CTA.astro";
import TechChip from "@/components/TechChip.astro";
import BlogPost from "@components/BlogPost.astro";
import ProjectCard from "@/components/ProjectCard.astro";

import { sortPostsByDate } from "@/scripts/utils.js";
import { getCollection } from "astro:content";

const title = "Efraim Munthe | Home";

interface Project {
  demo_link?: string;
  source_link: string;
  image: string;
  alt: string;
  heading: string;
  text: string;
}

const projects: Project[] = [
  {
    demo_link: "https://klrfl.github.io/Sebastian/",
    source_link: "https://github.com/Klrfl/Sebastian",
    image: "Sebastian.png",
    alt: "Screenshot of Sebastian's landing page",
    heading: "Sebastian",
    text: "This is my first ever static site, made when I barely knew anything about CSS.",
  },
  {
    source_link: "https://github.com/Klrfl/Sebastian-Sidebar",
    demo_link: "https://klrfl.github.io/Sebastian-Sidebar",
    image: "Sebastian Sidebar.png",
    alt: "Screenshot of Sebastian Sidebar's landing page",
    heading: "Sebastian Sidebar",
    text: "This is an improved version of my first static site. Looks quite similar.",
  },
  {
    demo_link: "https://klrfl.github.io/suwit-jawa",
    source_link: "https://github.com/Klrfl/suwit-jawa",
    image: "Suwit Jawa by Klrfl.png",
    alt: "Screenshot of my Suwit Jawa game",
    heading: "Suwit Jawa in JS",
    text: "Suwit Jawa game I made in JS.",
  },
  {
    demo_link: "https://pplgportfolio.netlify.app",
    source_link: "https://github.com/Klrfl/pplg-portfolio",
    image: "X PPLG Portofolio Landing Page.png",
    alt: "PPLG Portfolio collection landing page",
    heading: "PPLG Portfolio landing page.",
    text: "A collection of portfolios of my friends at PPLG. I designed the layout of this landing page, and made the search filter feature.",
  },
  {
    demo_link: "https://klrfl-moviesearch.netlify.app",
    source_link: "https://github.com/Klrfl/movie-search",
    image: "react-movie-search.png",
    alt: "Screenshot of my first React app, React Movie Search",
    heading: "React Movie Search",
    text: "I was bored and decided to learn React. This is just some simple API fetching stuff.",
  },
  {
    demo_link: "https://klrfl-url-shortener.netlify.app",
    source_link: "https://github.com/Klrfl/url-shortener",
    image: "url-shortener.png",
    alt: "Screenshot of my URL Shortener app.",
    heading: "Vue URL Shortener",
    text: "My first Vue project I used to get to know the Vue router and state management (spoiler alert: there was no state management).",
  },
  {
    demo_link: "https://telltime.netlify.app",
    source_link: "https://github.com/klrfl/TellTime",
    image: "telltime.png",
    alt: "Screenshot of TellTime",
    heading: "TellTime",
    text: "My project-based learning application. It's a timer app with a clock, timer, and stopwatch.",
  },
  {
    demo_link: "https://pinia-tasks-2b2da.web.app/",
    source_link: "https://github.com/Klrfl/pinia-tasks",
    image: "pinia-tasks.png",
    alt: "Home page of Pinia Tasks",
    heading: "Pinia Tasks",
    text: "A classic todo app made with Vue and Pinia for state management, powered by Firebase for authentication and hosting.",
  },
  {
    source_link: "https://github.com/klrfl/astro-supabase",
    image: "ssr-guestbook.png",
    alt: "home page of my SSR demo website",
    heading: "Astro SSR demo",
    text: "This is a website I made with Astro for demonstrating Supabase's new SSR package.",
  },
  {
    source_link: "https://github.com/klrfl/mekdi",
    image: "mekdi.png",
    alt: "Mekdi homepage",
    heading: "Mekdi",
    text: "is a small and simple CRUD application, made with Go (no router!) and HTMX.",
  },
  {
    source_link: "https://github.com/pplg-smkmetland/metschoo-library",
    image: "metschoo-library.png",
    alt: "Metschoo library homepage",
    heading: "Metschoo Library",
    text: "(WIP) Metschoo Library is a SPA made with Vue and Supabase to manage borrowings in the SMK Metland library.",
  },
];

const allPosts = await getCollection("blog");
const sortedPosts = sortPostsByDate(allPosts, 3);
---

<MainLayout
  title={title}
  description="Welcome to Efraim's personal little corner of the internet!">
  <section class="hero full-columns">
    <div class="hero__text">
      <h1>Hello! I'm Efraim.<span class="hero-wave">ðŸ‘‹</span></h1>
      <p>
        I'm a student, frontend web developer, tech enthusiast and avid learner.
      </p>
    </div>
    <div class="hero__cta">
      <CTA href="#projects">See what i've made</CTA>
      <CTA href="#contact" primary>Contact me</CTA>
    </div>
  </section>

  <section class="main-section full-columns" id="skills">
    <h2>Skills</h2>
    <p>
      In the last 2 and a half years, I have learned and used many different
      technologies in the frontend world. I am proficient in <TechChip>
        HTML
      </TechChip>, <TechChip>CSS</TechChip>, and <TechChip>
        JavaScript
      </TechChip>, and have experience using <TechChip
        href="https://astro.build">
        Astro
      </TechChip>, <TechChip href="https://vuejs.org">Vue</TechChip> and more
      recently <TechChip href="https://tailwindcss.com">Tailwind</TechChip>
       and <TechChip href="https://react.dev">React</TechChip>. Outside of web
      development, I have experience writing <TechChip>Lua</TechChip> in Roblox
      Studio, and I also learned a little bit of <TechChip>Python</TechChip> and


      <TechChip>C</TechChip>.
    </p>

    <p>
      Even though my learning experience is primarily on the frontend side, I
      have experience in fullstack PAASes such as <TechChip
        href="https://firebase.google.com">
        Firebase
      </TechChip> and <TechChip href="https://supabase.com">Supabase</TechChip>,
      and even backend technologies such as <TechChip href="https://go.dev">
        Go
      </TechChip>
       and <TechChip href="https://postgresql.org">PostgreSQL</TechChip>.
    </p>
  </section>

  <section class="main-section full-columns" id="projects">
    <h2>Projects</h2>
    <p>
      I strongly believe in learning by doing. So, when I learn a new
      technology, I always do projects, be it large or small. Here are some of
      them.
    </p>

    <ul class="projects-container odd-columns">
      {projects.map((project) => <ProjectCard {project} />)}
    </ul>
  </section>

  <section class="main-section full-columns" id="blog">
    <h2>Blog Posts</h2>
    <p>The newest posts from my personal blog.</p>

    <ul class="blog-list">
      {sortedPosts.map((post: object) => <BlogPost {post} />)}
    </ul>

    <div class="cta-container">
      <CTA href="/blog">See more blog posts</CTA>
    </div>
  </section>

  <section class="main-section full-columns" id="about">
    <h2>About me</h2>
    <p>
      My name is Efraim Munthe, I am a student currently learning about
      front-end web development and the JAMStack. I also recently got into
      backend web development, dabbling in NodeJS, PostgreSQL and Express. I
      haven't learned much about them, so I haven't put them into my skills yet.
    </p>

    <div class="cta-container">
      <CTA href="/about" primary>See more about me</CTA>
    </div>
  </section>

  <section class="main-section full-columns" id="contact">
    <h2>Contact</h2>
    <p>
      You can contact me via email or Discord, but you can message me here
      directly if you want!
    </p>

    <form
      class="contact-form"
      action="/form-success"
      method="POST"
      data-netlify="true">
      <label for="name">Name</label>
      <input type="text" name="name" placeholder="John Doe" required />

      <label for="email">Your Email</label>
      <input
        type="email"
        name="email"
        placeholder="johndoe420@mail.com"
        required
      />

      <label for="message">Your message</label>
      <textarea
        id="message"
        name="message"
        maxlength="2000"
        minlength="6"
        placeholder="Hi!!!"></textarea>

      <div class="cta-container">
        <CTA isButton primary>Send a message</CTA>
      </div>
    </form>
  </section>

  <script>
    if (window.netlifyIdentity) {
      window.netlifyIdentity.on("init", (user) => {
        if (!user) {
          window.netlifyIdentity.on("login", () => {
            document.location.href = "/admin/";
          });
        }
      });
    }
  </script>
</MainLayout>

<style>
  .main-section {
    background: var(--background);
    padding-block: 1rem;
  }

  .main-section.hidden > * {
    opacity: 0;
  }

  .main-section.hidden:nth-child(even) > * {
    transform: translateX(50%);
  }

  .main-section.hidden:nth-child(odd) > * {
    transform: translateX(-50%);
  }

  .main-section > * {
    transition:
      opacity var(--transition-slow),
      transform var(--transition-slow);
  }

  .hero {
    background: var(--secondary);
    padding: 5em;
    color: var(--text);
  }

  .hero__text {
    color: var(--text);
    text-align: center;
    z-index: 1;
    flex: 1 1 0;
  }

  .hero__text h1 {
    font-size: min(2.5rem, 8vmin);

    line-height: 0.9;
    margin-inline: auto;
    margin-block: 0;
    position: relative;
  }

  .hero-wave {
    animation: wave 1200ms cubic-bezier(0.22, 0.61, 0.36, 1) 1000ms;
    transform-origin: 65% 75%;
    display: inline-block;
  }

  @keyframes wave {
    from {
      rotate: 0deg;
    }
    25%,
    75% {
      rotate: 30deg;
    }
    50% {
      rotate: 0deg;
    }
    to {
      rotate: 0deg;
    }
  }

  .hero__cta {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .hero__cta a {
    text-align: center;
  }

  #about {
    background: var(--secondary);
  }

  .projects-container {
    padding: 0;
    margin: 0;

    display: grid;
    grid-template-columns: subgrid;
    row-gap: 1rem;
  }

  /* contact */
  .contact-form {
    background: var(--secondary);
    padding: 1em;
  }

  .contact-form :is(label, input, textarea) {
    padding: 1em;
  }

  .contact-form label {
    display: block;
    padding-inline: 0;
  }

  .contact-form input {
    width: 100%;
  }

  .contact-form textarea {
    display: block;
    width: 100%;
    resize: vertical;
  }
</style>

<script>
  import "../scripts/observer.js";
</script>
